#include <iostream>


void govno() {
    std::cout << "******************************" << '\n';
    std::cout << " Найти в каждой строке матрицы максимальный элемент." << '\n';
    std::cout << "Выполнил: Козич Арсений Павлович, ГР : 453502" << '\n';
    std::cout << "******************************" << '\n';
}


void krek(char ch[]) {
    bool z = true;
    int x = 0;
    int y = 0;
    for (int i = 0; ch[i] != '\0'; i++) {
        if (ch[i] == '-') {
            z = false;
        }
        if (ch[i]== '+') {
            z = true;
        }
        std::cout << ch[i];
        if (ch[i] == ' ') {
            continue;
        }

if (ch[i] >= '0' && ch[i] <= '9') {
            y = ch[i] - '0';


            if (z) {
                x += y;
            } else {
                x -= y;
            }
        }
    }
    std::cout << '=' << x << '\n';
}

/*void krek(char ch[]) {
    bool z = true;  // Флаг знака: true - '+', false - '-'
    int x = 0;      // Сумма чисел
    int y = 0;      // Текущее число

    for (int i = 0; ch[i] != '\0'; i++) {
        // Пропускаем пробелы
        if (ch[i] == ' ') {
            continue;
        }

        // Проверка на знак
        if (ch[i] == '-') {
            z = false;
            continue;  // Пропускаем знак и переходим к следующей итерации
        }
        if (ch[i] == '+') {
            z = true;
            continue;  // Пропускаем знак и переходим к следующей итерации
        }

        // Преобразуем символ цифры в число
        if (ch[i] >= '0' && ch[i] <= '9') {
            y = ch[i] - '0';  // Преобразуем символ в число

            // Применяем текущий знак
            if (z) {
                x += y;  // При положительном знаке прибавляем
            } else {
                x -= y;  // При отрицательном знаке вычитаем
            }
        }
        std::cout << ch[i];
    }

    // Выводим результат
    std::cout << '=' << x << '\n';
}*/